# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: npm ci, start server
      run: |
        cd my-website/server
        npm ci
        node index.js
    - name: npm ci, build, deploy
      run: |
        cd my-website/client
        echo REACT_APP_PARSE_APP_ID="${{ secrets.REACT_APP_PARSE_APP_ID }}" >> .env
        echo REACT_APP_PARSE_JS_KEY="${{ secrets.REACT_APP_PARSE_JS_KEY }}" >> .env
        echo REACT_APP_PARSE_SERVER_URL="${{ secrets.REACT_APP_PARSE_SERVER_URL }}" >> .env
        echo REACT_APP_TEST_VAR="${{ secrets.REACT_APP_TEST_VAR }}" >> .env
        echo REACT_APP_SERVICE_ID="${{ secrets.REACT_APP_SERVICE_ID }}" >> .env
        echo REACT_APP_TEMPLATE_ID="${{ secrets.REACT_APP_TEMPLATE_ID }}" >> .env
        echo REACT_APP_EMAIL_PUBLIC_KEY="${{ secrets.REACT_APP_EMAIL_PUBLIC_KEY }}" >> .env
        npm ci
        npm run build
        git config --global user.name $user_name
        git config --global user.email $user_email
        git remote set-url origin https://${github_token}@github.com/${repository}
        npm run deploy
      env:
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        github_token: ${{ secrets.ACTIONS_DEPLOY_ACCESS_TOKEN }}
        repository: ${{ github.repository }}
